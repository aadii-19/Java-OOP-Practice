ArrayList<Integer> list = new ArrayList<>();
--> // this <Integer> is known as generics
--> It is parameterised type in which it ensures only that type is given.
--> Can be used in creating a reusable code like an arrayList for diff data types.
--> Ensures `Type Safety`

ArrayList list = new ArrayList<>();
--> Making like this means any data type can be added no [TYPE_SAFETY]
--> Only classes can be added not primitive data types like <Integer> not <int>
--> Type checks at compile time
--> You can't create an instance of a generic type coz during compile time the byteCode doesn't have any idea about the <T>
--> Comparable is used when java doesn't know which to check in objects
--> The comparable is an interface that has a generic type